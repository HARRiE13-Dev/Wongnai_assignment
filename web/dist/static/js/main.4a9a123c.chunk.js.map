{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["baseURL","App","useState","trips","setTrips","keyword","setKeyword","useEffect","className","onKeyPress","event","key","axios","get","then","response","data","length","alert","value","onChange","target","type","name","placeholder","map","element","eid","src","photos","alt","href","url","title","description","tags","Boolean","window","location","hostname","match","library","add","faCheckSquare","faCoffee","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4PAMMA,EAAO,0CAkHEC,MAhHf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KA0Bb,OAtBAC,qBAAU,cAEP,IAqBD,oCACE,yBAAKC,UAAU,cACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,eAAd,sEACA,2BACEC,WAxBa,SAACC,GACJ,UAAdA,EAAMC,MACO,IAAXN,EACFO,IAAMC,IAAN,UAAab,IAAWc,MAAK,SAACC,GAC5BX,EAASW,EAASC,SAEA,IAAXX,GACTO,IAAMC,IAAN,UAAab,EAAb,oBAAgCK,IAAWS,MAAK,SAACC,GAC3CA,EAASC,KAAKC,OAAS,EACzBb,EAASW,EAASC,MACe,GAAxBD,EAASC,KAAKC,QACvBC,MAAM,sBAcNC,MAAOd,EACPe,SAAU,SAACV,GACTJ,EAAWI,EAAMW,OAAOF,QAE1BX,UAAU,yBACVc,KAAK,OACLC,KAAK,GACLC,YAAY,iIAIfrB,EAAMsB,KAAI,SAACC,GACV,OACE,oCACE,yBAAKlB,UAAU,YAAYG,IAAKe,EAAQC,KACtC,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,WACb,yBACEA,UAAU,iBACVoB,IAAKF,EAAQG,OAAO,GACpBC,IAAI,OAIV,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,iCACZ,uBAAGA,UAAU,uBAAuBuB,KAAML,EAAQM,KAC/CN,EAAQO,QAGb,yBAAKzB,UAAU,yBACb,uBAAGA,UAAU,eAAekB,EAAQQ,aADtC,6OAE+C,IAC7C,uBAAG1B,UAAU,YAAYuB,KAAML,EAAQM,KAAvC,+CAIF,yBAAKxB,UAAU,yBACb,uBAAGA,UAAU,uBAAb,8BACS,uBAAGuB,KAAK,KAAKL,EAAQS,KAAK,IAAQ,IACzC,uBAAGJ,KAAK,KAAKL,EAAQS,KAAK,IAF5B,sBAEwC,IACtC,uBAAGJ,KAAK,KAAKL,EAAQS,KAAK,MAG9B,yBAAK3B,UAAU,YACb,yBAAKA,UAAU,QACb,yBACEA,UAAU,wBACVoB,IAAKF,EAAQG,OAAO,GACpBC,IAAI,MAGR,yBAAKtB,UAAU,QACb,yBACEA,UAAU,wBACVoB,IAAKF,EAAQG,OAAO,GACpBC,IAAI,MAGR,yBAAKtB,UAAU,QACb,yBACEA,UAAU,wBACVoB,IAAKF,EAAQG,OAAO,GACpBC,IAAI,iBC7FVM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCRNC,IAAQC,IAAIC,IAAeC,KAE3BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4a9a123c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst baseURL = `https://wnmytrip.herokuapp.com/api/trip`;\n\nfunction App() {\n  const [trips, setTrips] = useState([]);\n  const [keyword, setKeyword] = useState(\"\");\n\n  useEffect(() => {\n    //\n  }, []);\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (keyword == \"\") {\n        axios.get(`${baseURL}`).then((response) => {\n          setTrips(response.data);\n        });\n      } else if (keyword != \"\") {\n        axios.get(`${baseURL}/keyword/${keyword}`).then((response) => {\n          if (response.data.length > 0) {\n            setTrips(response.data);\n          } else if (response.data.length == 0) {\n            alert(\"No trip found\");\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"style-font\">\n        <header className=\"text-center\">\n          <h1 className=\"font_header\">เที่ยวไหนดี</h1>\n          <input\n            onKeyPress={handleKeyPress}\n            value={keyword}\n            onChange={(event) => {\n              setKeyword(event.target.value);\n            }}\n            className=\"style-font text-center\"\n            type=\"text\"\n            name=\"\"\n            placeholder=\"หาที่เที่ยวแล้วไปกัน...\"\n          />\n        </header>\n        {/* Loop for request api from search */}\n        {trips.map((element) => {\n          return (\n            <>\n              <div className=\"grid mb-3\" key={element.eid}>\n                <div className=\"item\">\n                  <div className=\"content\">\n                    <img\n                      className=\"crop shadow-lg\"\n                      src={element.photos[0]}\n                      alt=\"\"\n                    ></img>\n                  </div>\n                </div>\n                <div className=\"item\">\n                  <div className=\"content \">\n                    <h3 className=\"font_topic text-left truncate\">\n                      <a className=\"read-more topic-link\" href={element.url}>\n                        {element.title}\n                      </a>\n                    </h3>\n                    <div className=\"font_detail text-left\">\n                      <p className=\"truncate-3 \">{element.description}</p>\n                      พร้อมแล้วก็ไปเลย ช้าหมดอดมันส์กับเพื่อน ....{\" \"}\n                      <a className=\"read-more\" href={element.url}>\n                        อ่านต่อ\n                      </a>\n                    </div>\n                    <div className=\"font_detail text-left\">\n                      <p className=\"text-left font_tags\">\n                        หมวด - <a href=\"#\">{element.tags[0]}</a>{\" \"}\n                        <a href=\"#\">{element.tags[1]}</a> และ{\" \"}\n                        <a href=\"#\">{element.tags[2]}</a>\n                      </p>\n                    </div>\n                    <div className=\"grid-img\">\n                      <div className=\"item\">\n                        <img\n                          className=\"crop-square shadow-lg\"\n                          src={element.photos[1]}\n                          alt=\"\"\n                        ></img>\n                      </div>\n                      <div className=\"item\">\n                        <img\n                          className=\"crop-square shadow-lg\"\n                          src={element.photos[2]}\n                          alt=\"\"\n                        ></img>\n                      </div>\n                      <div className=\"item\">\n                        <img\n                          className=\"crop-square shadow-lg\"\n                          src={element.photos[3]}\n                          alt=\"\"\n                        ></img>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faCheckSquare, faCoffee)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}